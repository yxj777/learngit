[Markdown语法](鸟哥的Linux私房菜（基础篇）\3.档案与目录管理\3.2.档案与目录管理.mk "最好的markdown教程")。
## 相对路径与绝对路径
- 绝对路径：写法一定是由根目录/写起
  - /usr/share/doc
- 相对路径：写法不是由.写起，相对于目前工作目录的路径
  - ../images
---
## 目录的相关操作
```
.           代表此层目录
..          代表上层目录
-           代表前一个工作目录
~           代表“目前使用者身份”所在的家目录
~account    代表account这个使用者的家目录（account是账号名）
```
- ### cd(change directory,变换目录)
  ```
  cd ~    回到家目录
  cd      同样也是回到家目录
  cd ..   回到上层目录
  cd -    回到刚才的目录
  ```
- ### pwd（显示当前所在目录）
  ```
  pwd  [-P]
  选项与参数：
  -P : 显示出确实的路径，而非链接（link）路径
  ```
- ### mkdir（创建路径）
  ```
  mkdir  [-mp]  目录名称
  选项与参数：
  -m : 设置文件权限
  -p : 所需的上层目录递归创建出来
  ```
- ### rmdir（删除空目录）
  ```
  rmdir  [-p]  目录名称
  选项与参数：
  -p : 连同年哦个上层空目录一起删除
  ```
---
## 可执行文件路径变量：$PATH
系统会依照PATH的设定区每个PATH定义的目录下搜索文件名为XXX的可执行文件，如果在PATH定义的目录中含有多个名为XXX的可执行文件，那么先搜索到的同名指令先被执行
- 不同身份用户默认的PATH不同，默认能够随意执行的指令也不同（如root与dmtsai）;
- PATH是可以修改的;
- 使用绝对路径或相对路径直接指定某个指令的文件名来执行，会比搜寻PATH来的正确;
- 指令应该要放置到正确的目录下，执行才会比较方便;
- 目录（.） 最好不要放到PATH当中。